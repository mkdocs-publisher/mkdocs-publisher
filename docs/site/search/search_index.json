{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"home","title":"Publisher plugin for MkDocs","text":"<p>Publisher for MkDocs is a set of plugins for MkDocs that was created originally as \"yet another blogging plugin for MkDocs\" (you can read more about this in this blog post). During a process of development, I realized that it can become something more that will help not only me with blog creation, but also as a part of a wider publishing tool, that can be used with cooperation with an Obsidian.md that is a tool for creating a second brain and also an excellent Markdown files editor.</p> <p>Currently, this plugin is also written with strict cooperation with Material for MkDocs theme. It was not tested on any and probably some of the functionalities may not work as intended (for example, formatting of blog posts). However, all the plugins that are included in this package should work separately and not all of them have to be enabled (for example, pub-minifier will work with any other set of plugins).</p>"},{"location":"home#included-features","title":"Included features","text":""},{"location":"setup/installation","title":"Installation","text":"<p>All plugins are part of this package and cannot be installed separately, but not all of them have to be enabled (more about this you can find in the Setup section).</p> <p>Publisher for MkDocs is a Python package that can be installed using <code>pip</code> (ideally inside a virtual environment) or any other package manager like <code>poetry</code> that handles virtual management out off the box.</p> pippoetry <pre><code>pip install mkdocs-publisher\n</code></pre> <pre><code>poetry add mkdocs-publisher\n</code></pre> <p>This package depends on some other Python packages and MkDocs plugins, so during installation they will also be installed. List of them:</p> <ul> <li>MkDocs,</li> <li>Material for MkDocs - probably the best theme for MkDocs,</li> <li>PyMdown Extensions - extensions for Markdown language.</li> </ul> <p>There are also some external tools used, mostly by <code>pub-minifier</code> plugin. Since this plugin is part of this package, but it's optional to use (not enabled by default), the process of installation of those tools is described in this plugin installation.</p>"},{"location":"setup/setting-up-auto-nav","title":"Setting up an auto-nav plugin","text":""},{"location":"setup/setting-up-a-blog","title":"Setting up a blog plugin","text":"<p>Publisher for MkDocs allows you to create a blog. A blog can be a sidecar for your current documentation, or it can be configured as a standalone. The entire blogging engine is created and preconfigured, so you can focus on content creation. It will handle creation of:</p> <ul> <li>indexes,</li> <li>archive,</li> <li>categories,</li> <li>tags,</li> <li>pagination.</li> </ul> <p>All the above documents are created outside <code>docs</code> directory, so they are not visible and do not interfere with your content.</p> <p>This documentation contains a blog that is created using this plugin, so you can take a look at a living example.</p>"},{"location":"setup/setting-up-a-blog#basic-configuration","title":"Basic configuration","text":"<p>To enable the built-in blog plugin, the following lines have to be added to <code>mkdocs.yml</code> file:</p> mkdocs.yml<pre><code>plugins:\n- pub-blog\n</code></pre> <p>By default, the blogging plugin assumes that blog posts are located inside <code>blog</code> subdirectory. You have to create this directory manually, so the directory structure will look like this:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/ # (1)!\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>This is a directory where to create a blog posts</li> </ol> <p>The last thing is to add a blog to a site navigation. There are 3 ways to do it:</p> Add to existing site layoutUsing pub-auto-nav pluginStandalone mode <p>If an existing pages are created in MkDocs, it's simple to just add a blog functionality. To achieve it, Any name with path to a blog subdirectory name (by default it's a <code>blog</code>) has to be added to the <code>mkdocs.yml</code> file and blogging engine will handle everything else.</p> mkdocs.yml<pre><code>nav:\n- ... # (1)!\n- Any name: blog # (2)!\n- ... # (3)!\n</code></pre> <ol> <li>Previous navigation configuration keys</li> <li>Navigation to a <code>blog</code> directory with an Any name</li> <li>Rest of the navigation configuration keys</li> </ol> <p>When pub-auto-nav plugin is configured and directory for blog posts is set up, there is nothing more left to be configured. All the things related to creating navigation section will be handled automatically by the pub-auto-nav plugin.</p> <p>A standalone mode gives a posibility to setup a MkDocs for just a pure blogging experience. Blog will become a main page. To make it happen, the following lines have to be added to <code>mkdocs.yml</code> file:</p> mkdocs.yaml<pre><code>plugins:\npub-blog:\nstart_page: true # (1)!\n</code></pre> <ol> <li>This enables a standalone mode</li> </ol> <p>Documents created outisde directory where blog posts are stored, will be considered as out of navigation configuration but still rendred. To use them, you have to put links to them inside blog posts or by editing thame template files.</p>"},{"location":"setup/setting-up-a-blog#advanced-settings","title":"Advanced settings","text":""},{"location":"setup/setting-up-a-blog#slug","title":"Slug","text":"<p>When using non-standalone blog mode, it's good to have an ability to go to your blog by a direct URL, like <code>https://yourblog.com/blog/</code>. The <code>blog</code> part of the URL can be configured to a non-standard value:</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\nslug: blog # (1)!\n</code></pre> <ol> <li>The default value for slug.</li> </ol>"},{"location":"setup/setting-up-a-blog#teaser-marker","title":"Teaser marker","text":"<p>Usually, blog posts are a huge chunk of text. Putting a longer text on an index page, can be not convenient for your blog audience. To split a longer blog post into a teaser part and a full article, you have to put a <code>&lt;!-- more --&gt;</code> in some line inside a content of your blog post. This value is a valid HTML comment, so it will not be rendered. If for any reason, you need to change it, you can do it by adding the following configuration key:</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\nteaser_marker: `&lt;!-- more --&gt;` # (1)!\n</code></pre> <ol> <li>The default value for teaser marker.</li> </ol>"},{"location":"setup/setting-up-a-blog#pagination","title":"Pagination","text":"<p>When you gather over time some amount of blog posts, their index even with short teasers, they can take quite much space over a single page and scrolling down is not a convenient solution. To avoid this, blogging engine allows splitting index pages when they contain a certain amount of blog posts.  By default, it's set to 5, but you can change it by adding a following configuration key:</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\nposts_per_page: 5 # (1)!\n</code></pre> <ol> <li>The default value for the number of posts per page.</li> </ol>"},{"location":"setup/setting-up-a-blog#directories","title":"Directories","text":"<p>This plugin to work correctly, needs to create and/or use some directories. Those settings should be considered as advanced and for day to day use, you should not change them.</p> <code>temp_dir</code><code>archive_subdir</code><code>categories_subdir</code><code>tags_subdir</code> <p>Temporary directory is used by a blog engine to create an index files with a blog post teasers and other files like a list of archive, categories and tags pages.</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\ntemp_dir: .temp # (1)!\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Temporary directory is created at the same level as main <code>docs</code> directory and <code>mkdocs.yml</code> configuration file.</p> <pre><code>.\n\u251c\u2500 .temp/\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Archive directory is used to store dynamically generated documents that contains archive indexes.</p> <p>Some description</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\narchive_subdir: archive # (1)!\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Archive directory is a subdirectory to a temporary directory.</p> <pre><code>.\n\u251c\u2500 .temp/\n\u2502  \u2514\u2500 archive/ # (1)!\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Categories directory is used to store dynamically generated documents that contains categories indexes.</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\ncategories_subdir: categories # (1)!\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Categories directory is a subdirectory to a temporary directory.</p> <pre><code>.\n\u251c\u2500 .temp/\n\u2502  \u2514\u2500 categories/ # (1)!\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Tags directory is used to store dynamically generated documents that contains tags indexes.</p> mkdocs.yml<pre><code>plugins:\n- pub-blog:\ntags_subdir: tags # (1)!\n</code></pre> <ol> <li>The default value.</li> </ol> <p>Tags directory is a subdirectory to a temporary directory.</p> <pre><code>.\n\u251c\u2500 .temp/\n\u2502  \u2514\u2500 tags/ # (1)!\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 blog/\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>The default value.</li> </ol>"},{"location":"setup/setting-up-a-blog#language","title":"Language","text":"<p>By default, the blogging plugin is set to use English (<code>en</code>) translation. Currently, available languages:</p> <ul> <li><code>en</code> - English,</li> <li><code>pl</code> - Polish.</li> </ul> <p>To set up one of the above languages, the following line has to be added to the <code>mkdocs.yml</code> file:</p> mkdosc.yml<pre><code>plugin:\n- pub-blog:\nlang: 'pl' # (1)!\n</code></pre> <ol> <li>Set language to Polish</li> </ol>"},{"location":"setup/setting-up-a-blog#translation","title":"Translation","text":"<p>If there is no language that suits you best, you can translate part of the interface by providing values for the below keys inside the configuration <code>mkdocs.yml</code> files. Providing those values overrides values for setup of a given language, and this way it's possible to change only some of them.</p> <p>Below, you can find a list of settings keys with English values that allow to translate some parts of the interface:</p> mkdocs.yaml<pre><code>plugins:\npub-blog:\ntranslation:\nteaser_link_text: Read more\nblog_page_title: Blog\nblog_navigation_name: Blog\nrecent_blog_posts_navigation_name: Recent posts\narchive_page_title: Archive\narchive_navigation_name: Archive\ncategories_page_title: Category\ncategories_navigation_name: Categories\ntags_page_title: Tag\ntags_navigation_name: Tags\nnewer_posts: Newer posts\nolder_posts: Older posts\n</code></pre>"},{"location":"setup/setting-up-minifier","title":"Setting up a minifier plugin","text":""},{"location":"blog/v010-initial-release/","title":"v0.1.0 - Initial release","text":"<p>Another blogging plugin for MkDocs? But why?</p> <p>The simplest answer is: because I couldn't find one good enough (and free).</p> <p>The flip side of the same coin was that I wanted to migrate my personal blog related to testing (sorry only in Polish, but you can try to use Google translator) from Nikola that works quite well, but sometimes is overly complicated, has almost none search functionality and markdown files are not the default one (but it's possible to use them). Why does the Markdown format is so important? Because I love Obsidian as a tool for gathering knowledge, and this format is a crucial part of that tool.</p> <p>At the time when this plugin was created, there were no free and good alternatives. The only one that could be good enough was hidden behind a paid wall and was a part of a theme Material for MkDocs. Some of the ideas for this plugin and functionalities came from documentation of the Material for MkDocs theme, Nikola and other plugins.</p> <p>Existing alternatives (with my comment):</p> <ul> <li>Material for MkDocs - complex solution, but paid,</li> <li>mkdocs-blogging-plugin - works, but simple solution for simple blog (limited tags usage, theme files modification needed, limited use of frontmatter, limited number of features),</li> <li>mkdocs-blog-plugin - no longer maintained and simple,</li> <li>python-mkblog - no longer maintained and simple,</li> <li>mkdocs-blog - no longer maintained and simple,</li> <li>material theme modification - it's not a plugin, but a complete theme modification, it's hard to extend and configure.</li> </ul> <p>As you can see, there are just 2 still maintained plugins for blogging in MkDocs:</p> <ol> <li>Material for MkDocs - complex but paid,</li> <li>mkdosc-blogging-plugin - much simpler than Material for MkDocs and a bit hacky due to mostly tricks in the template.</li> </ol>"},{"location":"blog/v010-initial-release/#features-implemented","title":"Features implemented","text":"<p>This project is now at an early stage of development. Current functionalities are:</p> <ul> <li>blog post update date based on metadata (post YAML frontmatter)</li> <li>blog post URL link based on metadata (post YAML frontmatter)</li> <li>blog post tags and categories based on metadata (post YAML frontmatter)</li> <li>support for blog post teaser</li> <li>auto generation of blog posts navigation</li> </ul>"},{"location":"blog/v020/","title":"v0.2.0","text":"<p>The main focus in this release is around making it a valid python package that can be published and to adding some additional functionalities around retrieving additional information from frontmatter.</p>"},{"location":"blog/v020/#features-implemented","title":"Features implemented","text":"<p>Further development of blog plugin:</p> <ul> <li>added: sub-pages for archive, categories, blog</li> <li>added: configurable blog posts pagination with page navigation</li> <li>added: interface language change: EN and PL (help wanted with more languages)</li> <li>added: possibility to override for all interface text elements</li> <li>added: valid python package at pypi.org</li> </ul>"},{"location":"blog/v030/","title":"v0.3.0","text":"<p>This release was a quick fix for a wrong directory structure in <code>site-packages</code> after package installation.</p>"},{"location":"dev/todo","title":"Plans for future development","text":"<p>Below TODO lists are overal plan and there is no particular order when they will be implemented.</p>"},{"location":"dev/todo#plugins","title":"Plugins","text":""},{"location":"dev/todo#blog","title":"Blog","text":"<ul> <li> Add: blog post reading time + watch time (defined in post meta)</li> <li> Add: possibility to disable categories and/or tags pages</li> <li> Add: automatic add search exclude to draft and hidden pages when using material for MkDocs theme with search plugin enabled</li> <li> Add: authors and update date in the template</li> <li> Add: blog posts index template override</li> <li> Add: language override in YAML file</li> <li> Add: configurable date format</li> <li> Add: blog post publication state: draft, published, hidden</li> <li> Fix: <code>blog</code> slug do not open first page when not in standalone mode</li> </ul>"},{"location":"dev/todo#minifier","title":"Minifier","text":"<ul> <li> Add: ignored files list/pattern</li> <li> Add: stats for number of minified/taken from cache files</li> </ul>"},{"location":"dev/todo#meta-apply-new-plugin","title":"Meta-apply (new plugin)","text":"<ul> <li> Add: usage of page frontmatter</li> <li> Add: document publication state: draft, published, hidden</li> <li> Add: sitemap optimizations and creation of <code>robots.txt</code> file based on document status</li> </ul>"},{"location":"dev/todo#social-new-plugin","title":"Social (new plugin)","text":"<ul> <li> Add: inject social media preview into document based on frontmatter</li> </ul>"},{"location":"dev/todo#obsidian-new-plugin","title":"Obsidian (new plugin)","text":"<ul> <li> Add: callout format support</li> <li> Add: wiki links format support</li> <li> Add: charts</li> <li> Add: mindmaps (???)</li> <li> Add: templates (blog post, page, etc.)</li> <li> Add: backlinks</li> <li> Add: graphs (long term goal)</li> </ul>"},{"location":"dev/todo#general","title":"General","text":""},{"location":"dev/todo#cli-tool","title":"CLI tool","text":"<ul> <li> Add: project initialization that preconfigure <code>mkdocs.yml</code></li> <li> Add: create a new blog post</li> <li> Add: document/blog post slug update</li> <li> Add: check for minifier tools</li> <li> Add: minify single file using minifier</li> <li> Add: document/blog post publication state change</li> </ul>"},{"location":"dev/todo#documentation","title":"Documentation","text":"<ul> <li> Blog plugin</li> <li> Minifier plugin</li> <li> Auto-nav plugin</li> <li> Integration with RSS plugin</li> <li> How to set up and use docker image</li> <li> Setting up CI/CD in GitHub Actions</li> <li> This plugin development how to</li> </ul>"},{"location":"dev/todo#other","title":"Other","text":"<ul> <li> Create Docker image with everything preinstalled and preconfigured</li> <li> GitHub repo with preconfigured pages, etc. (can be integrated with Docker Image creation)</li> <li> Unittests and code coverage with pre-commit</li> <li> Cleanup list of code TODO's</li> <li> Drop <code>python-frontmatter</code> for MkDocs built-in library for metadata retirval</li> </ul>"},{"location":"dev/changelog","title":"Version history","text":""},{"location":"dev/changelog#040","title":"0.4.0","text":"<p>General:</p> <ul> <li>changed: project rename</li> <li>added: cross configuration of blog and auto-nav plugins:</li> <li>blog does not add auto-nav meta files</li> <li>auto-nav automatically adds blog directory to skipped directories since it will be built by blog</li> <li>if one of the plugins is not enabled, other is not using its values</li> </ul> <p>Blog:</p> <ul> <li>added: possibility to choose a blog as a starting page with option to define manually blog in nav configuration</li> <li>added: <code>slug</code> config option for setting an entire blog's main directory URL</li> <li>changed: internal file structure refactor with new global plugin config (BlogConfig class) that will help with further development with small fixes and improvements</li> <li>changed: blog subdirectory navigation creation (entry path needs to be equal to subdirectory name)</li> <li>fixed: live reload infinite loop during <code>serve</code> caused by temporary files created and removed in blog directory</li> <li>fixed: navigation is no longer overridden by a blog (if there is no other nav, blog will create on with recent posts as a main page)</li> </ul> <p>Minifier (new plugin):</p> <ul> <li>added: PNG image minifier (using: pngquant and oxipng)</li> <li>added: JPG image minifier (using: mozjpeg)</li> <li>added: SVG image minifier (using: svgo)</li> <li>added: HTML file minifier (using: html-minifier)</li> <li>added: CSS file minifier (using: postcss with plugins: cssnano, svgo)</li> <li>added: JS file minifier (using: uglifyjs)</li> </ul> <p>Auto-nav (new plugin):</p> <ul> <li>added: build navigation based on file names</li> <li>added: directory metadata and additional settings can be set in a frontmatter of <code>*.md</code> file (default to <code>README.md</code>)</li> <li>added: configuration of sort prefix delimiter</li> <li>added: sort prefix removal in URL and site files</li> </ul>"},{"location":"dev/changelog#030-20230220","title":"0.3.0 - 2023.02.20","text":"<ul> <li>fixed: for wrong directory structure in site-packages after install</li> </ul>"},{"location":"dev/changelog#020-20230220","title":"0.2.0 - 2023.02.20","text":"<ul> <li>added: sub-pages for archive, categories, blog</li> <li>added: configurable blog posts pagination with page navigation</li> <li>added: interface language change: EN and PL (help wanted with more languages)</li> <li>added: possibility to override for all interface text elements</li> </ul>"},{"location":"dev/changelog#010-initial-release","title":"0.1.0 - initial release","text":"<ul> <li>added: blog post update date based on metadata</li> <li>added: blog post URL link based on metadata</li> <li>added: blog post tags and categories based on metadata</li> <li>added: support for blog post teaser</li> <li>added: auto generation of blog posts navigation</li> </ul>"},{"location":"index-0/","title":"Blog","text":""},{"location":"index-0/#v030","title":"v0.3.0","text":"<p>2023-02-20 22:00:00</p> #v0.3.0 <p>This release was a quick fix for a wrong directory structure in <code>site-packages</code> after package installation.</p>"},{"location":"index-0/#v020","title":"v0.2.0","text":"<p>2023-02-20 19:00:00</p> #v0.2.0 <p>The main focus in this release is around making it a valid python package that can be published and to adding some additional functionalities around retrieving additional information from frontmatter.</p> Read more"},{"location":"index-0/#v010-initial-release","title":"v0.1.0 - Initial release","text":"<p>2023-02-02 22:00:00</p> #v0.1.0 <p>Another blogging plugin for MkDocs? But why?</p> <p>The simplest answer is: because I couldn't find one good enough (and free).</p> <p>The flip side of the same coin was that I wanted to migrate my personal blog related to testing (sorry only in Polish, but you can try to use Google translator) from Nikola that works quite well, but sometimes is overly complicated, has almost none search functionality and markdown files are not the default one (but it's possible to use them). Why does the Markdown format is so important? Because I love Obsidian as a tool for gathering knowledge, and this format is a crucial part of that tool.</p> <p>At the time when this plugin was created, there were no free and good alternatives. The only one that could be good enough was hidden behind a paid wall and was a part of a theme Material for MkDocs. Some of the ideas for this plugin and functionalities came from documentation of the Material for MkDocs theme, Nikola and other plugins.</p> Read more"},{"location":"blog/archive/2023/","title":"Archive - 2023","text":""},{"location":"blog/archive/2023/#v030","title":"v0.3.0","text":"<p>2023-02-20 22:00:00</p> #v0.3.0 <p>This release was a quick fix for a wrong directory structure in <code>site-packages</code> after package installation.</p>"},{"location":"blog/archive/2023/#v020","title":"v0.2.0","text":"<p>2023-02-20 19:00:00</p> #v0.2.0 <p>The main focus in this release is around making it a valid python package that can be published and to adding some additional functionalities around retrieving additional information from frontmatter.</p> Read more"},{"location":"blog/archive/2023/#v010-initial-release","title":"v0.1.0 - Initial release","text":"<p>2023-02-02 22:00:00</p> #v0.1.0 <p>Another blogging plugin for MkDocs? But why?</p> <p>The simplest answer is: because I couldn't find one good enough (and free).</p> <p>The flip side of the same coin was that I wanted to migrate my personal blog related to testing (sorry only in Polish, but you can try to use Google translator) from Nikola that works quite well, but sometimes is overly complicated, has almost none search functionality and markdown files are not the default one (but it's possible to use them). Why does the Markdown format is so important? Because I love Obsidian as a tool for gathering knowledge, and this format is a crucial part of that tool.</p> <p>At the time when this plugin was created, there were no free and good alternatives. The only one that could be good enough was hidden behind a paid wall and was a part of a theme Material for MkDocs. Some of the ideas for this plugin and functionalities came from documentation of the Material for MkDocs theme, Nikola and other plugins.</p> Read more"},{"location":"blog/categories/release/","title":"Category - release","text":""},{"location":"blog/categories/release/#v030","title":"v0.3.0","text":"<p>2023-02-20 22:00:00</p> #v0.3.0 <p>This release was a quick fix for a wrong directory structure in <code>site-packages</code> after package installation.</p>"},{"location":"blog/categories/release/#v020","title":"v0.2.0","text":"<p>2023-02-20 19:00:00</p> #v0.2.0 <p>The main focus in this release is around making it a valid python package that can be published and to adding some additional functionalities around retrieving additional information from frontmatter.</p> Read more"},{"location":"blog/categories/release/#v010-initial-release","title":"v0.1.0 - Initial release","text":"<p>2023-02-02 22:00:00</p> #v0.1.0 <p>Another blogging plugin for MkDocs? But why?</p> <p>The simplest answer is: because I couldn't find one good enough (and free).</p> <p>The flip side of the same coin was that I wanted to migrate my personal blog related to testing (sorry only in Polish, but you can try to use Google translator) from Nikola that works quite well, but sometimes is overly complicated, has almost none search functionality and markdown files are not the default one (but it's possible to use them). Why does the Markdown format is so important? Because I love Obsidian as a tool for gathering knowledge, and this format is a crucial part of that tool.</p> <p>At the time when this plugin was created, there were no free and good alternatives. The only one that could be good enough was hidden behind a paid wall and was a part of a theme Material for MkDocs. Some of the ideas for this plugin and functionalities came from documentation of the Material for MkDocs theme, Nikola and other plugins.</p> Read more"},{"location":"blog/tags/v0.1.0/","title":"Tag - v0.1.0","text":""},{"location":"blog/tags/v0.1.0/#v010-initial-release","title":"v0.1.0 - Initial release","text":"<p>2023-02-02 22:00:00</p> #v0.1.0 <p>Another blogging plugin for MkDocs? But why?</p> <p>The simplest answer is: because I couldn't find one good enough (and free).</p> <p>The flip side of the same coin was that I wanted to migrate my personal blog related to testing (sorry only in Polish, but you can try to use Google translator) from Nikola that works quite well, but sometimes is overly complicated, has almost none search functionality and markdown files are not the default one (but it's possible to use them). Why does the Markdown format is so important? Because I love Obsidian as a tool for gathering knowledge, and this format is a crucial part of that tool.</p> <p>At the time when this plugin was created, there were no free and good alternatives. The only one that could be good enough was hidden behind a paid wall and was a part of a theme Material for MkDocs. Some of the ideas for this plugin and functionalities came from documentation of the Material for MkDocs theme, Nikola and other plugins.</p> Read more"},{"location":"blog/tags/v0.2.0/","title":"Tag - v0.2.0","text":""},{"location":"blog/tags/v0.2.0/#v020","title":"v0.2.0","text":"<p>2023-02-20 19:00:00</p> #v0.2.0 <p>The main focus in this release is around making it a valid python package that can be published and to adding some additional functionalities around retrieving additional information from frontmatter.</p> Read more"},{"location":"blog/tags/v0.3.0/","title":"Tag - v0.3.0","text":""},{"location":"blog/tags/v0.3.0/#v030","title":"v0.3.0","text":"<p>2023-02-20 22:00:00</p> #v0.3.0 <p>This release was a quick fix for a wrong directory structure in <code>site-packages</code> after package installation.</p>"}]}
